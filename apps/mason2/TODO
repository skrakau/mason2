Mason 2 TODOs
=============

URGENT
------

mason_simulator

 * FASTQ input from a typical run for quality and N-patterns, cycle through data
   - This requires bulk-simulation of reads to circumvent possible problems.

mason_splicer

 * splicing given GFF/GTF file, use algorithm scaffold from ngs_roi

IMPORTANT
---------

 * compress temporary files (allow to switch off) so memory usage is not as catastrophic any more :)
 * use heap/tournament tree for merging in FastaJoiner
 * testing, FASTQ profiles etc., methylation pattern check
 * joining of FASTA files uses lexical comparison not natural number order
 * exceptions instead of return codes

LATER
-----

 * biases in mismatch errors from input, trained from real-world data
 * add simulation of adaptors/barcodes
 * more robust parsing of VCF for variant import
